syntax = "proto3";

package api.passport.v1;

option go_package = "douyin/api/passport/v1;v1";

service Passport {
  rpc Register(DouyinUserRegisterRequest) returns (DouyinUserRegisterResponse);
  rpc Login(DouyinUserLoginRequest) returns (DouyinUserLoginResponse);
  rpc GetInfo(DouyinGetUserInfoRequest) returns (DouyinGetUserInfoResponse);
  rpc MGetInfo(DouyinMultipleGetUserInfoRequest) returns (DouyinMultipleGetUserInfoResponse);
}

message DouyinUserRegisterRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

message DouyinUserRegisterResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

message DouyinUserLoginRequest {
  string username = 1; // 登录用户名
  string password = 2; // 登录密码
}

message DouyinUserLoginResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

message DouyinGetUserInfoRequest {
  int64 user_id = 1; // 用户id
}

message DouyinGetUserInfoResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  optional UserInfo info = 3; // 详情
}

message DouyinMultipleGetUserInfoRequest {
  repeated int64 user_ids = 1; // 用户id
}

message DouyinMultipleGetUserInfoResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated UserInfo infos = 3; // 详情
}

message UserInfo {
  bool is_exist = 1; // 用户是否存在
  int64 id = 2; // 用户id
  string name = 3; // 用户名称
  optional string avatar = 4; // 用户头像
  optional string backgroundImage = 5; // 用户个人页顶部大图
  optional string signature = 6; // 个人简介
}
