syntax = "proto3";

package comment.service.v1;

option go_package = "douyin/service/comment/v1;v1";

service Comment {
  rpc CommentAction(CommentActionRequest) returns (CommentActionResponse);
  rpc GetCommentListByVideoId(GetCommentListByVideoIdRequest) returns (GetCommentListByVideoIdResponse);
  rpc CountCommentByVideoId(CountCommentByVideoIdRequest) returns (CountCommentByVideoIdResponse);
  rpc MCountCommentByVideoId(MCountCommentByVideoIdRequest) returns (MCountCommentByVideoIdResponse);
}

message CommentActionRequest {
  int64 user_id = 1; // 用户id
  int64 video_id = 2; // 视频id
  int32 action_type = 3; // 1-发布评论，2-删除评论
  optional string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
  optional int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
}

message CommentActionResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  optional CommentInfo comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
}

message GetCommentListByVideoIdRequest {
  int64 video_id = 1; // 视频id
}

message GetCommentListByVideoIdResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated CommentInfo comment_list = 3; // 评论列表
}

message CountCommentByVideoIdRequest {
  int64 video_id = 1; // 视频id
}

message CountCommentByVideoIdResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  int64 comment_count = 3; // 评论总数
}

message MCountCommentByVideoIdRequest {
  repeated int64 video_id_list = 1; // 视频id列表
}

message MCountCommentByVideoIdResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated int64 count_list = 3; // 评论总数列表
}

message CommentInfo {
  int64 id = 1; // 视频评论id
  User user = 2; // 评论用户信息
  string content = 3; // 评论内容
  string create_date = 4; // 评论发布日期，格式 mm-dd
}

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  optional string avatar = 3; // 用户头像
}